/* tslint:disable */
/* eslint-disable */
/**
 * LuuGo - Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Authentication
 */
export interface Authentication {
    /**
     * 
     * @type {string}
     * @memberof Authentication
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Authentication
     */
    readonly username: string;
    /**
     * 
     * @type {string}
     * @memberof Authentication
     */
    readonly email: string;
    /**
     * 
     * @type {Date}
     * @memberof Authentication
     */
    readonly emailVerifiedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Authentication
     */
    readonly cpfcnpj?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Authentication
     */
    readonly cpfcnpjVerifiedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Authentication
     */
    readonly phoneNumber?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof Authentication
     */
    readonly phoneNumberVerifiedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Authentication
     */
    readonly googleId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Authentication
     */
    readonly appleId?: string | null;
}

/**
 * Check if a given object implements the Authentication interface.
 */
export function instanceOfAuthentication(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "email" in value;

    return isInstance;
}

export function AuthenticationFromJSON(json: any): Authentication {
    return AuthenticationFromJSONTyped(json, false);
}

export function AuthenticationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Authentication {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'username': json['username'],
        'email': json['email'],
        'emailVerifiedAt': !exists(json, 'emailVerifiedAt') ? undefined : (json['emailVerifiedAt'] === null ? null : new Date(json['emailVerifiedAt'])),
        'cpfcnpj': !exists(json, 'cpfcnpj') ? undefined : json['cpfcnpj'],
        'cpfcnpjVerifiedAt': !exists(json, 'cpfcnpjVerifiedAt') ? undefined : (json['cpfcnpjVerifiedAt'] === null ? null : new Date(json['cpfcnpjVerifiedAt'])),
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'phoneNumberVerifiedAt': !exists(json, 'phoneNumberVerifiedAt') ? undefined : (json['phoneNumberVerifiedAt'] === null ? null : new Date(json['phoneNumberVerifiedAt'])),
        'googleId': !exists(json, 'googleId') ? undefined : json['googleId'],
        'appleId': !exists(json, 'appleId') ? undefined : json['appleId'],
    };
}

export function AuthenticationToJSON(value?: Authentication | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
    };
}

