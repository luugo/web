/* tslint:disable */
/* eslint-disable */
/**
 * LuuGo - Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Media
 */
export interface Media {
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof Media
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Media
     */
    readonly updatedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    rentableId?: string;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    filename?: string;
    /**
     * 
     * @type {Blob}
     * @memberof Media
     */
    file?: Blob;
    /**
     * 
     * @type {string}
     * @memberof Media
     */
    type?: MediaTypeEnum;
}


/**
 * @export
 */
export const MediaTypeEnum = {
    Photo: 'PHOTO',
    Video: 'VIDEO'
} as const;
export type MediaTypeEnum = typeof MediaTypeEnum[keyof typeof MediaTypeEnum];


/**
 * Check if a given object implements the Media interface.
 */
export function instanceOfMedia(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MediaFromJSON(json: any): Media {
    return MediaFromJSONTyped(json, false);
}

export function MediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Media {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (json['updatedAt'] === null ? null : new Date(json['updatedAt'])),
        'rentableId': !exists(json, 'rentableId') ? undefined : json['rentableId'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'filename': !exists(json, 'filename') ? undefined : json['filename'],
        'file': !exists(json, 'file') ? undefined : json['file'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function MediaToJSON(value?: Media | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'rentableId': value.rentableId,
        'url': value.url,
        'filename': value.filename,
        'file': value.file,
        'type': value.type,
    };
}

