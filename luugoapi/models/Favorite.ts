/* tslint:disable */
/* eslint-disable */
/**
 * LuuGo - Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Favorite
 */
export interface Favorite {
    /**
     * 
     * @type {string}
     * @memberof Favorite
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Favorite
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof Favorite
     */
    rentableId: string;
    /**
     * 
     * @type {Date}
     * @memberof Favorite
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Favorite
     */
    readonly updatedAt?: Date | null;
}

/**
 * Check if a given object implements the Favorite interface.
 */
export function instanceOfFavorite(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "rentableId" in value;

    return isInstance;
}

export function FavoriteFromJSON(json: any): Favorite {
    return FavoriteFromJSONTyped(json, false);
}

export function FavoriteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Favorite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'userId': json['userId'],
        'rentableId': json['rentableId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (json['updatedAt'] === null ? null : new Date(json['updatedAt'])),
    };
}

export function FavoriteToJSON(value?: Favorite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'userId': value.userId,
        'rentableId': value.rentableId,
    };
}

