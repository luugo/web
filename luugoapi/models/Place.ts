/* tslint:disable */
/* eslint-disable */
/**
 * LuuGo - Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Place
 */
export interface Place {
    /**
     * 
     * @type {string}
     * @memberof Place
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof Place
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Place
     */
    readonly updatedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Place
     */
    city: string;
    /**
     * 
     * @type {string}
     * @memberof Place
     */
    state: string;
}

/**
 * Check if a given object implements the Place interface.
 */
export function instanceOfPlace(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "city" in value;
    isInstance = isInstance && "state" in value;

    return isInstance;
}

export function PlaceFromJSON(json: any): Place {
    return PlaceFromJSONTyped(json, false);
}

export function PlaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Place {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (json['updatedAt'] === null ? null : new Date(json['updatedAt'])),
        'city': json['city'],
        'state': json['state'],
    };
}

export function PlaceToJSON(value?: Place | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'city': value.city,
        'state': value.state,
    };
}

